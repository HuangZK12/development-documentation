import{_ as n,p as s,q as a,a1 as e}from"./framework-e5ca3300.js";const t={},p=e(`<h1 id="vue系统相关问题" tabindex="-1"><a class="header-anchor" href="#vue系统相关问题" aria-hidden="true">#</a> vue系统相关问题</h1><h2 id="移动端设配" tabindex="-1"><a class="header-anchor" href="#移动端设配" aria-hidden="true">#</a> 移动端设配</h2><h3 id="postcss-px-to-viewport" tabindex="-1"><a class="header-anchor" href="#postcss-px-to-viewport" aria-hidden="true">#</a> postcss-px-to-viewport</h3><blockquote><p>用于将px转换为vw，适配移动端</p></blockquote><h5 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">pnpm</span> <span class="token function">install</span> postcss-px-to-viewport <span class="token parameter variable">-D</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h5><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// .postcssrc.js</span>
<span class="token comment">// 设用于vite，webpack配置使用commonjs导出</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  plugins<span class="token operator">:</span> <span class="token punctuation">{</span>
    autoprefixer<span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token comment">// 用来给不同的浏览器自动添加相应前缀，如-webkit-，-moz-等等</span>
    <span class="token string">&quot;postcss-px-to-viewport&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      unitToConvert<span class="token operator">:</span> <span class="token string">&quot;px&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 要转化的单位</span>
      viewportWidth<span class="token operator">:</span> <span class="token number">750</span><span class="token punctuation">,</span> <span class="token comment">// UI设计稿的宽度</span>
      unitPrecision<span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token comment">// 转换后的精度，即小数点位数</span>
      propList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定转换的css属性的单位，*代表全部css属性的单位都进行转换</span>
      viewportUnit<span class="token operator">:</span> <span class="token string">&quot;vw&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定需要转换成的视窗单位，默认vw</span>
      fontViewportUnit<span class="token operator">:</span> <span class="token string">&quot;vw&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 指定字体需要转换成的视窗单位，默认vw</span>
      selectorBlackList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;wrap&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 指定不转换为视窗单位的类名，</span>
      minPixelValue<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认值1，小于或等于1px则不进行转换</span>
      mediaQuery<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否在媒体查询的css代码中也进行转换，默认false</span>
      replace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否转换后直接更换属性值</span>
       exclude<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(?!.*node_modules\\/vant)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 设置忽略文件，用正则做目录名匹配</span>
      landscape<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token comment">// 是否处理横屏情况</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(i,l){return s(),a("div",null,o)}const u=n(t,[["render",c],["__file","index.html.vue"]]);export{u as default};
