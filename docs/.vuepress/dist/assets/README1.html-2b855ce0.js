import{_ as n,p as s,q as a,a1 as t}from"./framework-e5ca3300.js";const e={},p=t(`<h1 id="compositions-api-方法" tabindex="-1"><a class="header-anchor" href="#compositions-api-方法" aria-hidden="true">#</a> compositions-api 方法</h1><h2 id="userequest" tabindex="-1"><a class="header-anchor" href="#userequest" aria-hidden="true">#</a> useRequest</h2><p>适用于表格渲染与操作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> fetchData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/compositions/useRequest&#39;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span>loading<span class="token punctuation">,</span> total<span class="token punctuation">,</span> page<span class="token punctuation">,</span> search<span class="token punctuation">,</span> reset<span class="token punctuation">,</span> request <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useRequest</span><span class="token punctuation">(</span>notice_list<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  params
<span class="token punctuation">}</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据" tabindex="-1"><a class="header-anchor" href="#数据" aria-hidden="true">#</a> 数据</h2><ul><li>data 响应式数组，用于渲染表格</li><li>loading</li><li>total 总数</li><li>page 对象，包含pageNo和pageSize</li></ul><h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h2><ul><li>search 重置页码第一页，带params搜索，直接用于search-button组件search方法</li><li>reset 清除所有的params进行搜索。如果有不需要清清除的不适用</li><li>handleFetch 请求方法</li></ul><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><ul><li>fetch 请求方法</li><li>params = {}, 参数集合,不需要页码</li><li>pageNo = 1, 参数:pageNo,默认1</li><li>pageSize = 10, 参数:pageSize,默认10</li><li>usePage = true, 参数:usePage,是否参数带页码</li><li>header = {}, 请求头额外参数,默认{}</li><li>success = null, 请求成功的回调,回调参数:请求成功的数据</li><li>error = null, 请求失败的回调,回调参数:请求失败的数据</li><li>finish = null, 请求结束的回调,回调参数:请求结束的数据</li></ul><h2 id="usetableselect" tabindex="-1"><a class="header-anchor" href="#usetableselect" aria-hidden="true">#</a> useTableSelect</h2><p>适用于饿了么表格选择与操作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> tableSelect <span class="token keyword">from</span> <span class="token string">&#39;@/compositions/table-select&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> handleSelection<span class="token punctuation">,</span> selectionCallback <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">tableSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token operator">&lt;</span>el<span class="token operator">-</span>table @selection<span class="token operator">-</span>change<span class="token operator">=</span><span class="token string">&quot;handleSelection&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>table<span class="token operator">&gt;</span>

<span class="token operator">&lt;</span>el<span class="token operator">-</span>button @click<span class="token operator">=</span><span class="token string">&quot;del&quot;</span><span class="token operator">&gt;</span>删除<span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>button<span class="token operator">&gt;</span>

<span class="token keyword">const</span> <span class="token function-variable function">del</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token function">selectionCb</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>del<span class="token punctuation">,</span> <span class="token string">&#39;++ del ++&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
		options
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h2><table><thead><tr><th>属性</th><th>默认值</th><th>类型</th><th>备注</th></tr></thead><tbody><tr><td>msg</td><td>&quot;该操作不可逆，是否继续操作&quot;</td><td>String</td><td>提示文字</td></tr><tr><td>title</td><td>&quot;提示&quot;</td><td>String</td><td>提示头部文字</td></tr><tr><td>type</td><td>&quot;warning&quot;</td><td>String</td><td>饿了么提示类型</td></tr><tr><td>tips</td><td>true</td><td>Boolean</td><td>是否提示(确认提示)</td></tr><tr><td>min</td><td>1</td><td>Number | String</td><td>最少选择项目</td></tr><tr><td>max</td><td>null</td><td>Number | String</td><td>最多选择项目</td></tr></tbody></table><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> methods</h2><table><thead><tr><th>属性</th><th>参数</th><th>备注</th></tr></thead><tbody><tr><td>handleSelection</td><td>Array</td><td>已选数组,用于饿了么表单选择函数</td></tr><tr><td>handleCb</td><td>Array</td><td>已选数组,用于操作删除或者需要选择提示的操作</td></tr></tbody></table><h2 id="userequestloading" tabindex="-1"><a class="header-anchor" href="#userequestloading" aria-hidden="true">#</a> useRequestLoading</h2><p>loading 辅助函数，Promise 适用于请求需要加载操作</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRequestLoading <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request&#39;</span>

<span class="token comment">// 示例</span>
<span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">params</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> params <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">useRequestLoading</span><span class="token punctuation">(</span>
  fetchData<span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;hzk&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">handle</span><span class="token operator">:</span> <span class="token string">&#39;获取数据&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">finish</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;finish&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">tip</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参数说明" tabindex="-1"><a class="header-anchor" href="#参数说明" aria-hidden="true">#</a> 参数说明</h2><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th></tr></thead><tbody><tr><td>api</td><td>请求方法</td><td>Function</td><td>-</td></tr><tr><td>params</td><td>请求参数</td><td>Object</td><td>-</td></tr><tr><td>option</td><td>配置项</td><td>Object</td><td>-</td></tr><tr><td>option.handle</td><td>操作名称</td><td>String</td><td>操作</td></tr><tr><td>option.success</td><td>成功回调</td><td>Function</td><td>null</td></tr><tr><td>option.finish</td><td>完成回调</td><td>Function</td><td>null</td></tr><tr><td>option.error</td><td>失败回调</td><td>Function</td><td>null</td></tr><tr><td>option.tip</td><td>是否显示提示信息</td><td>Boolean</td><td>true</td></tr></tbody></table>`,22),o=[p];function i(c,l){return s(),a("div",null,o)}const d=n(e,[["render",i],["__file","README1.html.vue"]]);export{d as default};
